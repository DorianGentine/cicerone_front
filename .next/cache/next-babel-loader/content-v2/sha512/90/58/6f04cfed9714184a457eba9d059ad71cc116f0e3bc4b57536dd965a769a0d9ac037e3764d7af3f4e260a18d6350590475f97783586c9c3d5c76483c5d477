{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/doria/Documents/Avem Cre\\u0301ation/Codes/cicerone_app/cicerone_front/src/components/documentCard.js\";\nimport React, { Component } from 'react';\nimport { Form, Field } from 'react-final-form';\nimport card from \"../styles/components/_c-document-display.module.scss\";\nimport myFetch from '../actions/myFetch';\n\nclass DocumentCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edit: false\n    };\n  }\n\n  render() {\n    const data = this.props.data;\n\n    const handleEdit = () => {\n      this.setState(prevState => ({\n        edit: !prevState.edit\n      }));\n    };\n\n    const handleDelete = () => {\n      myFetch(`${this.props.rootURL}/${data._id}`, data, \"DELETE\", this.props.loadData);\n    };\n\n    const onSubmit = values => {\n      myFetch(`${this.props.rootURL}/${values._id}`, values, \"PUT\", () => {\n        this.setState(prevState => ({\n          edit: !prevState.edit\n        }));\n        this.props.loadData();\n      });\n    };\n\n    const dataToRender = JSON.parse(JSON.stringify(data));\n    delete dataToRender._id;\n    delete dataToRender.__v;\n    const valuesToRender = [];\n\n    for (const property in dataToRender) {\n      valuesToRender.push(dataToRender[property]);\n    }\n\n    console.log('valuesToRender', valuesToRender);\n\n    const renderInfos = () => valuesToRender.map((value, index) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }, this);\n    });\n\n    if (this.state.edit) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: card.document_card,\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: onSubmit,\n          initialValues: data,\n          render: ({\n            handleSubmit,\n            submitting\n          }) => /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"_e-edit-form\",\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              name: \"name\",\n              component: \"input\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), this.props.rootURL.includes(\"beer_color\") && /*#__PURE__*/_jsxDEV(Field, {\n              name: \"color\",\n              component: \"input\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: submitting,\n              children: \"\\xC9diter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEdit,\n          className: \"red\",\n          children: \"Annuler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: card.document_card,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEdit,\n          children: \"Editer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          className: \"red\",\n          children: \"Supprimer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default DocumentCard;","map":{"version":3,"sources":["/Users/doria/Documents/Avem Création/Codes/cicerone_app/cicerone_front/src/components/documentCard.js"],"names":["React","Component","Form","Field","card","myFetch","DocumentCard","constructor","props","state","edit","render","data","handleEdit","setState","prevState","handleDelete","rootURL","_id","loadData","onSubmit","values","dataToRender","JSON","parse","stringify","__v","valuesToRender","property","push","console","log","renderInfos","map","value","index","document_card","handleSubmit","submitting","includes","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Field } from 'react-final-form';\nimport card from \"../styles/components/_c-document-display.module.scss\"\nimport myFetch from '../actions/myFetch'\n\nclass DocumentCard extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      edit: false,\n    }\n  }\n    \n  render() {\n    const data = this.props.data\n\n    const handleEdit = () => {\n      this.setState(prevState => ({\n        edit: !prevState.edit\n      }))\n    }\n\n    const handleDelete = () => {\n      myFetch(\n        `${this.props.rootURL}/${data._id}`, \n        data,\n        \"DELETE\",\n        this.props.loadData\n      )\n    }\n\n    const onSubmit = values => {\n      myFetch(\n        `${this.props.rootURL}/${values._id}`, \n        values,\n        \"PUT\", \n        () => {\n          this.setState(prevState => ({ edit: !prevState.edit}))\n          this.props.loadData()\n        }\n      )\n    }\n    \n    const dataToRender = JSON.parse(JSON.stringify(data))\n    delete dataToRender._id\n    delete dataToRender.__v\n    const valuesToRender = []\n    for (const property in dataToRender) {\n      valuesToRender.push(dataToRender[property])\n    }\n    console.log('valuesToRender', valuesToRender)\n    \n    const renderInfos = () => valuesToRender.map(\n      (value, index) => {\n        return <p key={index} >{value}</p>\n      }\n    )\n\n    if(this.state.edit){\n      return (\n        <div className={card.document_card}>\n          <Form\n            onSubmit={onSubmit}\n            initialValues={data}\n            render={({ handleSubmit, submitting }) => (\n              <form onSubmit={handleSubmit} className=\"_e-edit-form\">\n                <Field\n                  name=\"name\"\n                  component=\"input\"\n                  type=\"text\"\n                />\n                {this.props.rootURL.includes(\"beer_color\") &&\n                  <Field\n                    name=\"color\"\n                    component=\"input\"\n                    type=\"text\"\n                  />\n                }\n                <button type=\"submit\" disabled={submitting}>\n                  Éditer\n                </button>\n              </form>\n            )}\n          />\n          <button onClick={handleEdit} className=\"red\">Annuler</button>\n        </div>\n      )\n    }else{\n      return (\n        <div className={card.document_card}>\n          <p>{data.name}</p>\n          {/* {renderInfos()} */}\n          <button onClick={handleEdit}>Editer</button>\n          <button onClick={handleDelete} className=\"red\">Supprimer</button>\n        </div>\n      )\n    }\n  }\n}\n\nexport default DocumentCard"]},"metadata":{},"sourceType":"module"}