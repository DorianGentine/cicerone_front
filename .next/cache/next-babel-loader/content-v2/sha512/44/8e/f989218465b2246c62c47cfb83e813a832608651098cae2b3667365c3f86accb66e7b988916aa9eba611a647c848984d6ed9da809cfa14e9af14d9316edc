{"ast":null,"code":"const API_URL = `${process.env.NEXT_PUBLIC_API_ROOT_URL}api/auth/`;\nconst myHeaders = new Headers({\n  'content-type': 'application/json',\n  'content-length': 0\n});\n\nclass AuthService {\n  login(data) {\n    return fetch(API_URL + \"login\", {\n      method: \"POST\",\n      // headers: myHeaders,\n      body: JSON.stringify(data)\n    }).then(r => r.json()).then(response => {\n      if (response.data && response.data.token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response;\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(data) {\n    fetch(API_URL + \"signup\", {\n      method: \"POST\",\n      headers: myHeaders,\n      body: JSON.stringify(data)\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n    ;\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["/Users/doria/Documents/Avem Création/Codes/cicerone_app/cicerone_front/src/services/auth.service.js"],"names":["API_URL","process","env","NEXT_PUBLIC_API_ROOT_URL","myHeaders","Headers","AuthService","login","data","fetch","method","body","JSON","stringify","then","r","json","response","token","localStorage","setItem","logout","removeItem","register","headers","getCurrentUser","parse","getItem"],"mappings":"AAAA,MAAMA,OAAO,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,wBAAyB,WAAxD;AAEA,MAAMC,SAAS,GAAG,IAAIC,OAAJ,CAAY;AAC5B,kBAAgB,kBADY;AAE5B,oBAAkB;AAFU,CAAZ,CAAlB;;AAKA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,KAAK,CAACC,IAAD,EAAO;AACV,WAAOC,KAAK,CAACT,OAAO,GAAG,OAAX,EAAoB;AAC9BU,MAAAA,MAAM,EAAE,MADsB;AAE9B;AACAC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAHwB,KAApB,CAAL,CAKNM,IALM,CAKDC,CAAC,IAAIA,CAAC,CAACC,IAAF,EALJ,EAMNF,IANM,CAMDG,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACT,IAAT,IAAiBS,QAAQ,CAACT,IAAT,CAAcU,KAAnC,EAA0C;AACxCC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BR,IAAI,CAACC,SAAL,CAAeI,QAAQ,CAACT,IAAxB,CAA7B;AACD;;AAED,aAAOS,QAAP;AACD,KAZM,CAAP;AAaD;;AAEDI,EAAAA,MAAM,GAAG;AACPF,IAAAA,YAAY,CAACG,UAAb,CAAwB,MAAxB;AACD;;AAEDC,EAAAA,QAAQ,CAACf,IAAD,EAAO;AACbC,IAAAA,KAAK,CAACT,OAAO,GAAG,QAAX,EAAqB;AACxBU,MAAAA,MAAM,EAAE,MADgB;AAExBc,MAAAA,OAAO,EAAEpB,SAFe;AAGxBO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAHkB,KAArB,CAAL;AAKD;;AAEDiB,EAAAA,cAAc,GAAG;AACf,WAAOb,IAAI,CAACc,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqB,MAArB,CAAX,CAAP;AAAgD;AACjD;;AA/Be;;AAkClB,eAAe,IAAIrB,WAAJ,EAAf","sourcesContent":["const API_URL = `${process.env.NEXT_PUBLIC_API_ROOT_URL}api/auth/`;\n\nconst myHeaders = new Headers({ \n  'content-type': 'application/json',\n  'content-length': 0 \n})\n\nclass AuthService {\n  login(data) {\n    return fetch(API_URL + \"login\", {\n      method: \"POST\",\n      // headers: myHeaders,\n      body: JSON.stringify(data)\n    })\n    .then(r => r.json())\n    .then(response => {\n      if (response.data && response.data.token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n      \n      return response\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(data) {\n    fetch(API_URL + \"signup\", {\n      method: \"POST\",\n      headers: myHeaders,\n      body: JSON.stringify(data)\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n}\n\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}