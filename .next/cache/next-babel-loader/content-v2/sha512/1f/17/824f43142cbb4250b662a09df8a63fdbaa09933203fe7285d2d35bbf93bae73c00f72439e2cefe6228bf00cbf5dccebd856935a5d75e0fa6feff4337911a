{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/doria/Documents/Avem Cre\\u0301ation/Codes/cicerone_app/cicerone_front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/doria/Documents/Avem Cre\\u0301ation/Codes/cicerone_app/cicerone_front/src/pages/admin/[admin_id].js\";\nimport React, { Component } from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Layout from '../../components/layout';\nimport admin from '../../styles/pages/_p-admin.module.scss';\nimport myFetch from \"../../actions/myFetch\";\nimport DocumentCreation from '../../components/documentCreation';\nimport DocumentDisplay from '../../components/documentDisplay';\n\nclass AdminId extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"loadData\", () => {\n      myFetch(`${process.env.NEXT_PUBLIC_API_ROOT_URL}api/${this.props.admin_id}`, undefined, \"GET\", body => this.setState({\n        data: body\n      }));\n    });\n\n    this.state = {\n      data: null\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.admin_id !== state.prevId) {\n      return {\n        data: null,\n        prevId: props.admin_id\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: this.props.body\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.data === null) {\n      this.setState({\n        data: this.props.body\n      });\n    }\n  }\n\n  render() {\n    const root = \"/admin\"; // let updatedBody = null\n    // async function loadData(){\n    //   console.log(\"launched\")\n    //   let response = await fetch(`${process.env.NEXT_PUBLIC_API_ROOT_URL}api/${props.admin_id}`)\n    //   if(response.ok){\n    //     updatedBody = await response.json()\n    //   } else {\n    //     console.error(response.error)\n    //   }\n    // }\n    // console.log('updatedBody', updatedBody)\n\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      admin: true,\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: this.props.admin_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: admin.admin_menu,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: `${root}/region`,\n          children: \"R\\xE9gions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: `${root}/alcohol_title`,\n          children: \"Alcohol titles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: `${root}/beer_category`,\n          children: \"Beer categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: `${root}/beer_color`,\n          children: \"Beer colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: `${root}/bitterness`,\n          children: \"Bitterness\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: `${root}/beer_type`,\n          children: \"Beer types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: admin.admin_body,\n        children: [/*#__PURE__*/_jsxDEV(DocumentCreation, {\n          loadData: loadData,\n          admin_id: this.props.admin_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DocumentDisplay, {\n          loadData: loadData,\n          admin_id: this.props.admin_id,\n          data: updatedBody ? updatedBody : this.props.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/doria/Documents/Avem Création/Codes/cicerone_app/cicerone_front/src/pages/admin/[admin_id].js"],"names":["React","Component","Head","Link","Layout","admin","myFetch","DocumentCreation","DocumentDisplay","AdminId","constructor","props","process","env","NEXT_PUBLIC_API_ROOT_URL","admin_id","undefined","body","setState","data","state","getDerivedStateFromProps","prevId","componentDidMount","componentDidUpdate","prevProps","prevState","render","root","admin_menu","admin_body","loadData","updatedBody"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Head from 'next/head'\nimport Link from 'next/link'\nimport Layout from '../../components/layout'\nimport admin from '../../styles/pages/_p-admin.module.scss'\nimport myFetch from \"../../actions/myFetch\"\n\nimport DocumentCreation from '../../components/documentCreation'\nimport DocumentDisplay from '../../components/documentDisplay'\n\nexport async function getStaticProps({ params }) {\n  let response = await fetch(`${process.env.NEXT_PUBLIC_API_ROOT_URL}api/${params.admin_id}`)\n  let body\n  if(response.ok){\n    body = await response.json()\n  } else {\n    console.error(response.error)\n  }\n  return {\n    props: {\n      body: body,\n      admin_id: params.admin_id\n    }\n  }\n}\n\nexport async function getStaticPaths() {\n  const adminPaths = [\n    \"region\",\n    \"alcohol_title\",\n    \"beer_category\",\n    \"beer_color\",\n    \"bitterness\",\n    \"beer_type\",\n  ]\n  const paths = adminPaths.map(path =>{\n    return {\n      params: {\n        admin_id: path\n      }\n    }\n  })\n  return {\n    paths,\n    fallback: false\n  }\n}\n\nclass AdminId extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      data: null\n    }\n  }\n    \n  loadData = () => {\n    myFetch(\n      `${process.env.NEXT_PUBLIC_API_ROOT_URL}api/${this.props.admin_id}`,\n      undefined,\n      \"GET\",\n      (body) => this.setState({data: body})\n    )\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.admin_id !== state.prevId) {\n      return {\n        data: null,\n        prevId: props.admin_id,\n      };\n    }\n    return null;\n  }\n\n  componentDidMount(){\n    this.setState({data: this.props.body})\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.data === null) {\n      this.setState({data: this.props.body})\n    }\n  }\n\n  render(){\n    const root = \"/admin\"\n\n    // let updatedBody = null\n    // async function loadData(){\n    //   console.log(\"launched\")\n    //   let response = await fetch(`${process.env.NEXT_PUBLIC_API_ROOT_URL}api/${props.admin_id}`)\n    //   if(response.ok){\n    //     updatedBody = await response.json()\n    //   } else {\n    //     console.error(response.error)\n    //   }\n    // }\n    // console.log('updatedBody', updatedBody)\n\n    return (\n      <Layout admin>\n      <Head>\n        <title>{this.props.admin_id}</title>\n      </Head>\n      <div className={admin.admin_menu}>\n        <Link href={`${root}/region`}>Régions</Link>\n        <Link href={`${root}/alcohol_title`}>Alcohol titles</Link>\n        <Link href={`${root}/beer_category`}>Beer categories</Link>\n        <Link href={`${root}/beer_color`}>Beer colors</Link>\n        <Link href={`${root}/bitterness`}>Bitterness</Link>\n        <Link href={`${root}/beer_type`}>Beer types</Link>\n      </div>\n\n      <div className={admin.admin_body}>\n        <DocumentCreation loadData={loadData} admin_id={this.props.admin_id} />\n        <DocumentDisplay loadData={loadData} admin_id={this.props.admin_id} data={updatedBody ? updatedBody : this.props.body} />\n      </div>\n    </Layout>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}