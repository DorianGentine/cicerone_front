{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/doria/Documents/Avem Cre\\u0301ation/Codes/cicerone_app/cicerone_front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/doria/Documents/Avem Cre\\u0301ation/Codes/cicerone_app/cicerone_front/src/components/adminBody.js\";\nimport React, { Component } from 'react';\nimport myFetch from \"../actions/myFetch\";\nimport DocumentCreation from \"../components/documentCreation\";\nimport DocumentDisplay from \"../components/documentDisplay\";\n\nclass AdminBody extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"loadData\", () => {\n      myFetch(`http://localhost:4200/api/${this.props.admin_id}`, undefined, \"GET\", body => this.setState({\n        data: body\n      }));\n    });\n\n    this.state = {\n      data: null\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.admin_id !== state.prevId) {\n      return {\n        data: null,\n        prevId: props.admin_id\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.data === null) {\n      this.loadData();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-body\",\n      children: [/*#__PURE__*/_jsxDEV(DocumentCreation, {\n        loadData: this.loadData,\n        admin_id: this.props.admin_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DocumentDisplay, {\n        loadData: this.loadData,\n        admin_id: this.props.admin_id,\n        data: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AdminBody;","map":{"version":3,"sources":["/Users/doria/Documents/Avem Création/Codes/cicerone_app/cicerone_front/src/components/adminBody.js"],"names":["React","Component","myFetch","DocumentCreation","DocumentDisplay","AdminBody","constructor","props","admin_id","undefined","body","setState","data","state","getDerivedStateFromProps","prevId","componentDidMount","loadData","componentDidUpdate","prevProps","prevState","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChCK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,sCAOP,MAAM;AACfL,MAAAA,OAAO,CACJ,6BAA4B,KAAKK,KAAL,CAAWC,QAAS,EAD5C,EAELC,SAFK,EAGL,KAHK,EAIJC,IAAD,IAAU,KAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAEF;AAAP,OAAd,CAJL,CAAP;AAMD,KAdiB;;AAEhB,SAAKG,KAAL,GAAa;AACXD,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAWD,SAAOE,wBAAP,CAAgCP,KAAhC,EAAuCM,KAAvC,EAA8C;AAC5C,QAAIN,KAAK,CAACC,QAAN,KAAmBK,KAAK,CAACE,MAA7B,EAAqC;AACnC,aAAO;AACLH,QAAAA,IAAI,EAAE,IADD;AAELG,QAAAA,MAAM,EAAER,KAAK,CAACC;AAFT,OAAP;AAID;;AACD,WAAO,IAAP;AACD;;AAEDQ,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,QAAL;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAI,KAAKP,KAAL,CAAWD,IAAX,KAAoB,IAAxB,EAA8B;AAC5B,WAAKK,QAAL;AACD;AACF;;AAEDI,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE,QAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAE,KAAKJ,QAAjC;AAA2C,QAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWC;AAAhE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AAAiB,QAAA,QAAQ,EAAE,KAAKS,QAAhC;AAA0C,QAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWC,QAA/D;AAAyE,QAAA,IAAI,EAAE,KAAKK,KAAL,CAAWD;AAA1F;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA5C+B;;AA+ClC,eAAeP,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport myFetch from \"../actions/myFetch\"\n\nimport DocumentCreation from \"../components/documentCreation\"\nimport DocumentDisplay from \"../components/documentDisplay\"\n\nclass AdminBody extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      data: null\n    }\n  }\n\n  loadData = () => {\n    myFetch(\n      `http://localhost:4200/api/${this.props.admin_id}`,\n      undefined,\n      \"GET\",\n      (body) => this.setState({data: body})\n    )\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.admin_id !== state.prevId) {\n      return {\n        data: null,\n        prevId: props.admin_id,\n      };\n    }\n    return null;\n  }\n\n  componentDidMount(){\n    this.loadData()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.data === null) {\n      this.loadData()\n    }\n  }\n  \n  render(){\n    return (\n      <div className=\"admin-body\">\n        <DocumentCreation loadData={this.loadData} admin_id={this.props.admin_id} />\n        <DocumentDisplay loadData={this.loadData} admin_id={this.props.admin_id} data={this.state.data} />\n      </div>\n    );\n  }\n}\n\nexport default AdminBody"]},"metadata":{},"sourceType":"module"}