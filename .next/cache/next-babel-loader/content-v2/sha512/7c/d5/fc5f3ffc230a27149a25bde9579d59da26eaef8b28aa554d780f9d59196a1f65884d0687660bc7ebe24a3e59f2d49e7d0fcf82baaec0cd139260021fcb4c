{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/doria/Documents/Avem Cre\\u0301ation/Codes/cicerone_app/cicerone_front/src/pages/quizz/[id]/[question_id].js\";\nimport Link from 'next/link';\nimport Layout from '../../../components/layout';\nimport { Form, Field } from 'react-final-form';\nimport quizzStyle from \"../../../styles/pages/_p-quizz.module.scss\";\n\nfunction QuizzQuestion(props) {\n  const onSubmit = async values => {\n    console.log(`values`, values); // await myFetch(\n    //   `${process.env.NEXT_PUBLIC_API_ROOT_URL}api/${props.admin_id}`, \n    //   values,\n    //   \"POST\",\n    //   props.loadData\n    // )\n  };\n\n  const validate = values => {// console.log('values', values)\n  };\n\n  const renderOptions = () => props.body.options.map((option, index) => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: option\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  });\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: `Quizz ${props.params.id}, question ${props.params.question_id}:`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      validate: validate,\n      initialValues: {},\n      render: ({\n        form,\n        submitting\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        className: quizzStyle.question,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.body.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: renderOptions()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_c = QuizzQuestion;\nexport var __N_SSG = true;\nexport default QuizzQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizzQuestion\");","map":{"version":3,"sources":["/Users/doria/Documents/Avem Création/Codes/cicerone_app/cicerone_front/src/pages/quizz/[id]/[question_id].js"],"names":["Link","Layout","Form","Field","quizzStyle","QuizzQuestion","props","onSubmit","values","console","log","validate","renderOptions","body","options","map","option","index","params","id","question_id","form","submitting","question","content"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;AAEA,OAAOC,UAAP,MAAuB,4CAAvB;;AAiDA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAE5B,QAAMC,QAAQ,GAAG,MAAMC,MAAN,IAAgB;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAa,QAAb,EAAsBF,MAAtB,EAD+B,CAE/B;AACA;AACA;AACA;AACA;AACA;AACD,GARD;;AAUA,QAAMG,QAAQ,GAAGH,MAAM,IAAI,CACzB;AACD,GAFD;;AAIA,QAAMI,aAAa,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACpE,wBAAO;AAAA,gBAAgBD;AAAhB,OAAQC,KAAR;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAF2B,CAA5B;;AAIA,sBACE,QAAC,MAAD;AAAA,4BACE;AAAA,gBAAM,SAAQX,KAAK,CAACY,MAAN,CAAaC,EAAG,cAAab,KAAK,CAACY,MAAN,CAAaE,WAAY;AAApE;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,IAAD;AACE,MAAA,QAAQ,EAAEb,QADZ;AAEE,MAAA,QAAQ,EAAEI,QAFZ;AAGE,MAAA,aAAa,EAAE,EAHjB;AAIE,MAAA,MAAM,EAAE,CAAC;AAAEU,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAD,kBACN;AAAM,QAAA,SAAS,EAAElB,UAAU,CAACmB,QAA5B;AAAA,gCACE;AAAA,oBAAKjB,KAAK,CAACO,IAAN,CAAWW;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBACGZ,aAAa;AADhB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;KAvCQP,a;;AAyCT,eAAeA,aAAf","sourcesContent":["import Link from 'next/link'\nimport Layout from '../../../components/layout'\nimport { Form, Field } from 'react-final-form';\n\nimport quizzStyle from \"../../../styles/pages/_p-quizz.module.scss\"\n\nexport async function getStaticProps({ params }) {\n  // let response = await fetch(`${process.env.NEXT_PUBLIC_API_ROOT_URL}api/${params.admin_id}`)\n  // let body\n  // if(response.ok){\n  //   body = await response.json()\n  // } else {\n  //   console.error(response.error)\n  // }\n  const body = {\n    content: \"Quelle est la région d'origine de la Rouge des Flandres ?\",\n    answer: \"Belgique & France\",\n    options: [\n      \"Belgique & France\",\n      \"Grande-Bretagne & Irelande\",\n      \"Ecosse\",\n      \"Irlande\",\n      \"Allemagne, RépTchèque & Autriche\",\n      \"États-Unis\",\n      \"International\"\n    ]\n  }\n  return {\n    props: {\n      body: body,\n      params: params\n    }\n  }\n}\n\nexport async function getStaticPaths() {\n  const adminPaths = [\n    {quizz_id: \"beer_types\", question_id: \"1\"},\n  ]\n  const paths = adminPaths.map(path =>{\n    return {\n      params: {\n        id: path.quizz_id,\n        question_id: path.question_id\n      }\n    }\n  })\n  return {\n    paths,\n    fallback: false\n  }\n}\n\nfunction QuizzQuestion(props) {\n\n  const onSubmit = async values => {\n    console.log(`values`, values)\n    // await myFetch(\n    //   `${process.env.NEXT_PUBLIC_API_ROOT_URL}api/${props.admin_id}`, \n    //   values,\n    //   \"POST\",\n    //   props.loadData\n    // )\n  }\n\n  const validate = values => {\n    // console.log('values', values)\n  }\n\n  const renderOptions = () => props.body.options.map((option, index) => {\n    return <p key={index}>{option}</p>\n  })\n\n  return (\n    <Layout>\n      <h1>{`Quizz ${props.params.id}, question ${props.params.question_id}:`}</h1>\n\n      <Form\n        onSubmit={onSubmit}\n        validate={validate}\n        initialValues={{}}\n        render={({ form, submitting }) => (\n          <form className={quizzStyle.question}>\n            <h2>{props.body.content}</h2>\n            <div>\n              {renderOptions()}\n            </div>\n          </form>\n        )}\n      />\n    </Layout>\n  )\n}\n\nexport default QuizzQuestion"]},"metadata":{},"sourceType":"module"}