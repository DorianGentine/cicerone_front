{"ast":null,"code":"const API_URL = `${process.env.NEXT_PUBLIC_API_ROOT_URL}api/auth/`;\n\nconst myHeaders = data => {\n  return new Headers({\n    'content-type': 'application/json',\n    'content-length': data ? JSON.stringify(data).length.toString() : 0\n  });\n};\n\nclass AuthService {\n  login(data) {\n    return fetch(API_URL + \"login\", {\n      method: \"POST\",\n      headers: myHeaders(data),\n      body: JSON.stringify(data)\n    }).then(r => r.json()).then(response => {\n      if (response.data && response.data.token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      console.log('localStorage.l23', localStorage.getItem('user'));\n      return response.data;\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(data) {\n    return fetch(API_URL + \"signup\", {\n      method: \"POST\",\n      headers: myHeaders(data),\n      body: JSON.stringify(data)\n    }).then(r => {\n      return r.json();\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n    ;\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["/Users/doria/Documents/Avem Création/Codes/cicerone_app/cicerone_front/src/services/auth.service.js"],"names":["API_URL","process","env","NEXT_PUBLIC_API_ROOT_URL","myHeaders","data","Headers","JSON","stringify","length","toString","AuthService","login","fetch","method","headers","body","then","r","json","response","token","localStorage","setItem","console","log","getItem","logout","removeItem","register","getCurrentUser","parse"],"mappings":"AAAA,MAAMA,OAAO,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,wBAAyB,WAAxD;;AAGA,MAAMC,SAAS,GAAGC,IAAI,IAAI;AACxB,SAAO,IAAIC,OAAJ,CAAY;AACjB,oBAAgB,kBADC;AAEjB,sBAAkBD,IAAI,GAAGE,IAAI,CAACC,SAAL,CAAeH,IAAf,EAAqBI,MAArB,CAA4BC,QAA5B,EAAH,GAA4C;AAFjD,GAAZ,CAAP;AAID,CALD;;AAOA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,KAAK,CAACP,IAAD,EAAO;AACV,WAAOQ,KAAK,CAACb,OAAO,GAAG,OAAX,EAAoB;AAC9Bc,MAAAA,MAAM,EAAE,MADsB;AAE9BC,MAAAA,OAAO,EAAEX,SAAS,CAACC,IAAD,CAFY;AAG9BW,MAAAA,IAAI,EAAET,IAAI,CAACC,SAAL,CAAeH,IAAf;AAHwB,KAApB,CAAL,CAKNY,IALM,CAKDC,CAAC,IAAIA,CAAC,CAACC,IAAF,EALJ,EAMNF,IANM,CAMDG,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACf,IAAT,IAAiBe,QAAQ,CAACf,IAAT,CAAcgB,KAAnC,EAA0C;AACxCC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BhB,IAAI,CAACC,SAAL,CAAeY,QAAQ,CAACf,IAAxB,CAA7B;AACD;;AACDmB,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,YAAY,CAACI,OAAb,CAAqB,MAArB,CAAhC;AAEA,aAAON,QAAQ,CAACf,IAAhB;AACD,KAbM,CAAP;AAcD;;AAEDsB,EAAAA,MAAM,GAAG;AACPL,IAAAA,YAAY,CAACM,UAAb,CAAwB,MAAxB;AACD;;AAEDC,EAAAA,QAAQ,CAACxB,IAAD,EAAO;AACb,WAAOQ,KAAK,CAACb,OAAO,GAAG,QAAX,EAAqB;AAC/Bc,MAAAA,MAAM,EAAE,MADuB;AAE/BC,MAAAA,OAAO,EAAEX,SAAS,CAACC,IAAD,CAFa;AAG/BW,MAAAA,IAAI,EAAET,IAAI,CAACC,SAAL,CAAeH,IAAf;AAHyB,KAArB,CAAL,CAKNY,IALM,CAKDC,CAAC,IAAI;AACT,aAAOA,CAAC,CAACC,IAAF,EAAP;AACD,KAPM,CAAP;AAQD;;AAEDW,EAAAA,cAAc,GAAG;AACf,WAAOvB,IAAI,CAACwB,KAAL,CAAWT,YAAY,CAACI,OAAb,CAAqB,MAArB,CAAX,CAAP;AAAgD;AACjD;;AAnCe;;AAsClB,eAAe,IAAIf,WAAJ,EAAf","sourcesContent":["const API_URL = `${process.env.NEXT_PUBLIC_API_ROOT_URL}api/auth/`;\n\n\nconst myHeaders = data => {\n  return new Headers({ \n    'content-type': 'application/json',\n    'content-length': data ? JSON.stringify(data).length.toString() : 0 \n  })\n}\n\nclass AuthService {\n  login(data) {\n    return fetch(API_URL + \"login\", {\n      method: \"POST\",\n      headers: myHeaders(data),\n      body: JSON.stringify(data)\n    })\n    .then(r => r.json())\n    .then(response => {\n      if (response.data && response.data.token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n      console.log('localStorage.l23', localStorage.getItem('user'))\n\n      return response.data;\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(data) {\n    return fetch(API_URL + \"signup\", {\n      method: \"POST\",\n      headers: myHeaders(data),\n      body: JSON.stringify(data)\n    })\n    .then(r => {\n      return r.json()\n    })\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n}\n\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}