{"ast":null,"code":"const API_URL = `${process.env.NEXT_PUBLIC_API_ROOT_URL}api/auth/`;\nconst myHeaders = new Headers({\n  'content-type': 'application/json',\n  'content-length': data ? JSON.stringify(data).length.toString() : 0\n});\n\nclass AuthService {\n  login(data) {\n    fetch(API_URL + \"login\", {\n      method: \"POST\",\n      headers: myHeaders,\n      body: JSON.stringify(data)\n    }).then(r => r.json()).then(response => {\n      console.log('response', response);\n\n      if (response.data.token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(data) {\n    fetch(API_URL + \"signup\", {\n      method: \"POST\",\n      headers: myHeaders,\n      body: JSON.stringify(data)\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n    ;\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["/Users/doria/Documents/Avem Création/Codes/cicerone_app/cicerone_front/src/services/auth.service.js"],"names":["API_URL","process","env","NEXT_PUBLIC_API_ROOT_URL","myHeaders","Headers","data","JSON","stringify","length","toString","AuthService","login","fetch","method","headers","body","then","r","json","response","console","log","token","localStorage","setItem","logout","removeItem","register","getCurrentUser","parse","getItem"],"mappings":"AAAA,MAAMA,OAAO,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,wBAAyB,WAAxD;AAEA,MAAMC,SAAS,GAAG,IAAIC,OAAJ,CAAY;AAC5B,kBAAgB,kBADY;AAE5B,oBAAkBC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeF,IAAf,EAAqBG,MAArB,CAA4BC,QAA5B,EAAH,GAA4C;AAFtC,CAAZ,CAAlB;;AAKA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,KAAK,CAACN,IAAD,EAAO;AACVO,IAAAA,KAAK,CAACb,OAAO,GAAG,OAAX,EAAoB;AACvBc,MAAAA,MAAM,EAAE,MADe;AAEvBC,MAAAA,OAAO,EAAEX,SAFc;AAGvBY,MAAAA,IAAI,EAAET,IAAI,CAACC,SAAL,CAAeF,IAAf;AAHiB,KAApB,CAAL,CAKCW,IALD,CAKMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EALX,EAMCF,IAND,CAMMG,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;;AACA,UAAIA,QAAQ,CAACd,IAAT,CAAciB,KAAlB,EAAyB;AACvBC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BlB,IAAI,CAACC,SAAL,CAAeY,QAAQ,CAACd,IAAxB,CAA7B;AACD;;AAED,aAAOc,QAAQ,CAACd,IAAhB;AACD,KAbD;AAcD;;AAEDoB,EAAAA,MAAM,GAAG;AACPF,IAAAA,YAAY,CAACG,UAAb,CAAwB,MAAxB;AACD;;AAEDC,EAAAA,QAAQ,CAACtB,IAAD,EAAO;AACbO,IAAAA,KAAK,CAACb,OAAO,GAAG,QAAX,EAAqB;AACxBc,MAAAA,MAAM,EAAE,MADgB;AAExBC,MAAAA,OAAO,EAAEX,SAFe;AAGxBY,MAAAA,IAAI,EAAET,IAAI,CAACC,SAAL,CAAeF,IAAf;AAHkB,KAArB,CAAL;AAKD;;AAEDuB,EAAAA,cAAc,GAAG;AACf,WAAOtB,IAAI,CAACuB,KAAL,CAAWN,YAAY,CAACO,OAAb,CAAqB,MAArB,CAAX,CAAP;AAAgD;AACjD;;AAhCe;;AAmClB,eAAe,IAAIpB,WAAJ,EAAf","sourcesContent":["const API_URL = `${process.env.NEXT_PUBLIC_API_ROOT_URL}api/auth/`;\n\nconst myHeaders = new Headers({ \n  'content-type': 'application/json',\n  'content-length': data ? JSON.stringify(data).length.toString() : 0 \n})\n\nclass AuthService {\n  login(data) {\n    fetch(API_URL + \"login\", {\n      method: \"POST\",\n      headers: myHeaders,\n      body: JSON.stringify(data)\n    })\n    .then(r => r.json())\n    .then(response => {\n      console.log('response', response)\n      if (response.data.token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(data) {\n    fetch(API_URL + \"signup\", {\n      method: \"POST\",\n      headers: myHeaders,\n      body: JSON.stringify(data)\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n}\n\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}