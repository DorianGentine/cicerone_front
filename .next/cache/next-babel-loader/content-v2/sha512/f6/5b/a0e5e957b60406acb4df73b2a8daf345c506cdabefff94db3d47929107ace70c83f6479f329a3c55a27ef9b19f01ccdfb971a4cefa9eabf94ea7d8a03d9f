{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/doria/Documents/Avem Cre\\u0301ation/Codes/cicerone_app/cicerone_front/src/components/documentDisplay.js\",\n    _s = $RefreshSig$();\n\nimport DocumentCard from \"./documentCard\";\nimport fetcher from '../actions/fetcher';\nimport useSWR from 'swr';\nimport display from \"../styles/components/_c-document-display.module.scss\";\n\nfunction DocumentDisplay(props) {\n  _s();\n\n  const renderDataCards = datas => datas.map((data, index) => {\n    return /*#__PURE__*/_jsxDEV(DocumentCard, {\n      data: data,\n      rootURL: `${process.env.NEXT_PUBLIC_API_ROOT_URL}api/${props.admin_id}`,\n      loadData: props.loadData\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this);\n  });\n\n  const checkData = Array.isArray(props.data) && props.data.length !== 0;\n  const {\n    data,\n    error\n  } = useSWR(`${process.env.NEXT_PUBLIC_API_ROOT_URL}api/${props.admin_id}`, fetcher);\n  console.log('error', error);\n  console.log('data', data);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  } else {\n    console.log('data', data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: display.document_display,\n    children: checkData ? renderDataCards(props.data) : \"Aucune entrée\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DocumentDisplay, \"r2QYs02BSrn+Eu/1uMGZi8N+HnQ=\", false, function () {\n  return [useSWR];\n});\n\n_c = DocumentDisplay;\nexport default DocumentDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocumentDisplay\");","map":{"version":3,"sources":["/Users/doria/Documents/Avem Création/Codes/cicerone_app/cicerone_front/src/components/documentDisplay.js"],"names":["DocumentCard","fetcher","useSWR","display","DocumentDisplay","props","renderDataCards","datas","map","data","index","process","env","NEXT_PUBLIC_API_ROOT_URL","admin_id","loadData","checkData","Array","isArray","length","error","console","log","document_display"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAEA,OAAOC,OAAP,MAAoB,sDAApB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAAA;;AAE7B,QAAMC,eAAe,GAAGC,KAAK,IAAIA,KAAK,CAACC,GAAN,CAC/B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACf,wBACE,QAAC,YAAD;AACE,MAAA,IAAI,EAAED,IADR;AAEE,MAAA,OAAO,EAAG,GAAEE,OAAO,CAACC,GAAR,CAAYC,wBAAyB,OAAMR,KAAK,CAACS,QAAS,EAFxE;AAGE,MAAA,QAAQ,EAAET,KAAK,CAACU;AAHlB,OAIOL,KAJP;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GAV8B,CAAjC;;AAaA,QAAMM,SAAS,GAAGC,KAAK,CAACC,OAAN,CAAcb,KAAK,CAACI,IAApB,KAA6BJ,KAAK,CAACI,IAAN,CAAWU,MAAX,KAAsB,CAArE;AAEA,QAAM;AAAEV,IAAAA,IAAF;AAAQW,IAAAA;AAAR,MAAkBlB,MAAM,CAAE,GAAES,OAAO,CAACC,GAAR,CAAYC,wBAAyB,OAAMR,KAAK,CAACS,QAAS,EAA9D,EAAiEb,OAAjE,CAA9B;AACAoB,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBb,IAApB;AACA,MAAIW,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACX,MAAI,CAACX,IAAL,EAAU;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEK;AACHY,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBb,IAApB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACoB,gBAAxB;AAAA,cACGP,SAAS,GAAGV,eAAe,CAACD,KAAK,CAACI,IAAP,CAAlB,GAAiC;AAD7C;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAhCQL,e;UAiBiBF,M;;;KAjBjBE,e;AAkCT,eAAeA,eAAf","sourcesContent":["import DocumentCard from \"./documentCard\"\nimport fetcher from '../actions/fetcher'\nimport useSWR from 'swr'\n\nimport display from \"../styles/components/_c-document-display.module.scss\"\n\nfunction DocumentDisplay(props){\n\n  const renderDataCards = datas => datas.map(\n    (data, index) => {\n      return(\n        <DocumentCard \n          data={data} \n          rootURL={`${process.env.NEXT_PUBLIC_API_ROOT_URL}api/${props.admin_id}`} \n          loadData={props.loadData}\n          key={index}\n        ></DocumentCard>\n      )\n    }\n  )\n\n  const checkData = Array.isArray(props.data) && props.data.length !== 0\n\n  const { data, error } = useSWR(`${process.env.NEXT_PUBLIC_API_ROOT_URL}api/${props.admin_id}`, fetcher)\n  console.log('error', error)\n  console.log('data', data)\n  if (error) return <div>failed to load</div>\n  if (!data){\n    return <div>loading...</div>\n  }else{\n    console.log('data', data)\n  }\n\n  return (\n    <div className={display.document_display}>\n      {checkData ? renderDataCards(props.data) : \"Aucune entrée\"}\n    </div>\n  );\n}\n\nexport default DocumentDisplay"]},"metadata":{},"sourceType":"module"}