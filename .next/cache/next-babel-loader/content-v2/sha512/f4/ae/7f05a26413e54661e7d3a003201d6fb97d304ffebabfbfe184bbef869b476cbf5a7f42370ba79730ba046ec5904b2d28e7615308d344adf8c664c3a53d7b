{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/doria/Documents/Avem Cre\\u0301ation/Codes/cicerone_app/cicerone_front/src/components/selectField.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { Field } from 'react-final-form';\nimport Select from 'react-select';\nimport fetcher from '../actions/fetcher';\nimport useSWR from 'swr';\nimport myFetch from \"../actions/myFetch\";\n\nclass SelectField extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"loadData\", () => {\n      myFetch(`${process.env.NEXT_PUBLIC_API_ROOT_URL}api/${this.props.url}`, undefined, \"GET\", body => this.setState({\n        options: body\n      }));\n    });\n\n    this.state = {\n      options: []\n    };\n  }\n\n  // componentDidMount() {\n  //   this.loadData()\n  // }\n  render() {\n    const options = this.state.options;\n    const customStyles = {\n      input: (provided, state) => _objectSpread({}, provided),\n      valueContainer: (provided, state) => _objectSpread(_objectSpread({}, provided), {}, {\n        fontSize: '14px',\n        padding: '0 8px'\n      })\n    };\n\n    const ReactSelectAdapter = (_ref) => {\n      let {\n        input\n      } = _ref,\n          rest = _objectWithoutProperties(_ref, [\"input\"]);\n\n      return /*#__PURE__*/_jsxDEV(Select, _objectSpread(_objectSpread(_objectSpread({}, input), rest), {}, {\n        instanceId: this.props.name,\n        getOptionLabel: option => option.name,\n        getOptionValue: option => option._id || option,\n        placeholder: this.props.placeholder,\n        styles: customStyles,\n        className: this.props.className\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(Field, {\n      name: this.props.name,\n      component: ReactSelectAdapter,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SelectField;","map":{"version":3,"sources":["/Users/doria/Documents/Avem Création/Codes/cicerone_app/cicerone_front/src/components/selectField.js"],"names":["Component","Field","Select","fetcher","useSWR","myFetch","SelectField","constructor","props","process","env","NEXT_PUBLIC_API_ROOT_URL","url","undefined","body","setState","options","state","render","customStyles","input","provided","valueContainer","fontSize","padding","ReactSelectAdapter","rest","name","option","_id","placeholder","className"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAClCO,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,sCAOP,MAAM;AACfH,MAAAA,OAAO,CACJ,GAAEI,OAAO,CAACC,GAAR,CAAYC,wBAAyB,OAAM,KAAKH,KAAL,CAAWI,GAAI,EADxD,EAELC,SAFK,EAGL,KAHK,EAIJC,IAAD,IAAU,KAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAEF;AAAV,OAAd,CAJL,CAAP;AAMD,KAdiB;;AAEhB,SAAKG,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAWD;AACA;AACA;AAGAE,EAAAA,MAAM,GAAE;AACN,UAAMF,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAA3B;AAEA,UAAMG,YAAY,GAAG;AACnBC,MAAAA,KAAK,EAAE,CAACC,QAAD,EAAWJ,KAAX,uBACFI,QADE,CADY;AAKnBC,MAAAA,cAAc,EAAE,CAACD,QAAD,EAAWJ,KAAX,qCACXI,QADW;AAEdE,QAAAA,QAAQ,EAAE,MAFI;AAGdC,QAAAA,OAAO,EAAE;AAHK;AALG,KAArB;;AAYA,UAAMC,kBAAkB,GAAG,UAAwB;AAAA,UAAvB;AAAEL,QAAAA;AAAF,OAAuB;AAAA,UAAXM,IAAW;;AACjD,0BACE,QAAC,MAAD,gDACMN,KADN,GAEMM,IAFN;AAGE,QAAA,UAAU,EAAE,KAAKlB,KAAL,CAAWmB,IAHzB;AAIE,QAAA,cAAc,EAAEC,MAAM,IAAIA,MAAM,CAACD,IAJnC;AAKE,QAAA,cAAc,EAAEC,MAAM,IAAIA,MAAM,CAACC,GAAP,IAAcD,MAL1C;AAME,QAAA,WAAW,EAAE,KAAKpB,KAAL,CAAWsB,WAN1B;AAOE,QAAA,MAAM,EAAEX,YAPV;AAQE,QAAA,SAAS,EAAE,KAAKX,KAAL,CAAWuB;AARxB;AAAA;AAAA;AAAA;AAAA,cADF;AAYD,KAbD;;AAeA,wBACE,QAAC,KAAD;AACE,MAAA,IAAI,EAAE,KAAKvB,KAAL,CAAWmB,IADnB;AAEE,MAAA,SAAS,EAAEF,kBAFb;AAGE,MAAA,OAAO,EAAET;AAHX;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA3DiC;;AA8DpC,eAAeV,WAAf","sourcesContent":["import { Component } from 'react'\nimport { Field } from 'react-final-form';\nimport Select from 'react-select'\nimport fetcher from '../actions/fetcher'\nimport useSWR from 'swr'\n\nimport myFetch from \"../actions/myFetch\";\n\nclass SelectField extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      options: []\n    }\n  }\n\n  loadData = () => {\n    myFetch(\n      `${process.env.NEXT_PUBLIC_API_ROOT_URL}api/${this.props.url}`,\n      undefined,\n      \"GET\",\n      (body) => this.setState({options: body})\n    )\n  } \n\n  // componentDidMount() {\n  //   this.loadData()\n  // }\n  \n\n  render(){\n    const options = this.state.options\n\n    const customStyles = {\n      input: (provided, state) => ({\n        ...provided,\n        // height: '1em'\n      }),\n      valueContainer: (provided, state) => ({\n        ...provided,\n        fontSize: '14px',\n        padding: '0 8px'\n      }),\n    }\n\n    const ReactSelectAdapter = ({ input, ...rest }) => {\n      return(\n        <Select \n          {...input} \n          {...rest}\n          instanceId={this.props.name}\n          getOptionLabel={option => option.name}\n          getOptionValue={option => option._id || option}\n          placeholder={this.props.placeholder}\n          styles={customStyles}\n          className={this.props.className}\n        />\n      )\n    }\n\n    return (\n      <Field\n        name={this.props.name}\n        component={ReactSelectAdapter}\n        options={options}\n      />\n    )\n  }\n}\n\nexport default SelectField"]},"metadata":{},"sourceType":"module"}