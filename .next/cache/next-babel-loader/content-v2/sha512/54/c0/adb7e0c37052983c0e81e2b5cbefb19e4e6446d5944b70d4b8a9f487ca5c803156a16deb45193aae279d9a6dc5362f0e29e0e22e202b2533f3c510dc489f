{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/doria/Documents/Avem Cre\\u0301ation/Codes/cicerone_app/cicerone_front/src/pages/admin/[admin_id].js\";\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Layout from '../../components/layout';\nimport admin from '../../styles/pages/_p-admin.module.scss';\nimport myFetch from \"../../actions/myFetch\";\nimport DocumentCreation from '../../components/documentCreation';\nimport DocumentDisplay from '../../components/documentDisplay';\nexport var __N_SSG = true;\nexport default function Post(props) {\n  const root = \"/admin\";\n  let updatedBody = null;\n\n  async function loadData() {\n    let response = await fetch(`${process.env.NEXT_PUBLIC_API_ROOT_URL}api/${props.admin_id}`);\n\n    if (response.ok) {\n      updatedBody = await response.json();\n    } else {\n      console.error(response.error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    admin: true,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.admin_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: admin.admin_menu,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: `${root}/region`,\n        children: \"R\\xE9gions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: `${root}/alcohol_title`,\n        children: \"Alcohol titles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: `${root}/beer_category`,\n        children: \"Beer categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: `${root}/beer_color`,\n        children: \"Beer colors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: `${root}/bitterness`,\n        children: \"Bitterness\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: `${root}/beer_type`,\n        children: \"Beer types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: admin.admin_body,\n      children: [/*#__PURE__*/_jsxDEV(DocumentCreation, {\n        loadData: loadData,\n        admin_id: props.admin_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DocumentDisplay, {\n        loadData: loadData,\n        admin_id: props.admin_id,\n        data: updatedBody ? updatedBody : props.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/doria/Documents/Avem Création/Codes/cicerone_app/cicerone_front/src/pages/admin/[admin_id].js"],"names":["Head","Link","Layout","admin","myFetch","DocumentCreation","DocumentDisplay","Post","props","root","updatedBody","loadData","response","fetch","process","env","NEXT_PUBLIC_API_ROOT_URL","admin_id","ok","json","console","error","admin_menu","admin_body","body"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,yCAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,eAAP,MAA4B,kCAA5B;;AAwCA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,QAAMC,IAAI,GAAG,QAAb;AAEA,MAAIC,WAAW,GAAG,IAAlB;;AACA,iBAAeC,QAAf,GAAyB;AACvB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,wBAAyB,OAAMR,KAAK,CAACS,QAAS,EAA9D,CAA1B;;AACA,QAAGL,QAAQ,CAACM,EAAZ,EAAe;AACbR,MAAAA,WAAW,GAAG,MAAME,QAAQ,CAACO,IAAT,EAApB;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACC,KAAR,CAAcT,QAAQ,CAACS,KAAvB;AACD;AACF;;AAED,sBACE,QAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAQb,KAAK,CAACS;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAEd,KAAK,CAACmB,UAAtB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAG,GAAEb,IAAK,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAG,GAAEA,IAAK,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAG,GAAEA,IAAK,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAG,GAAEA,IAAK,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAG,GAAEA,IAAK,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,IAAD;AAAM,QAAA,IAAI,EAAG,GAAEA,IAAK,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAaE;AAAK,MAAA,SAAS,EAAEN,KAAK,CAACoB,UAAtB;AAAA,8BACE,QAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAEZ,QAA5B;AAAsC,QAAA,QAAQ,EAAEH,KAAK,CAACS;AAAtD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AAAiB,QAAA,QAAQ,EAAEN,QAA3B;AAAqC,QAAA,QAAQ,EAAEH,KAAK,CAACS,QAArD;AAA+D,QAAA,IAAI,EAAEP,WAAW,GAAGA,WAAH,GAAiBF,KAAK,CAACgB;AAAvG;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;KAjCuBjB,I","sourcesContent":["import Head from 'next/head'\nimport Link from 'next/link'\nimport Layout from '../../components/layout'\nimport admin from '../../styles/pages/_p-admin.module.scss'\nimport myFetch from \"../../actions/myFetch\"\n\nimport DocumentCreation from '../../components/documentCreation'\nimport DocumentDisplay from '../../components/documentDisplay'\n\nexport async function getStaticProps({ params }) {\n  let response = await fetch(`${process.env.NEXT_PUBLIC_API_ROOT_URL}api/${params.admin_id}`)\n  let body\n  if(response.ok){\n    body = await response.json()\n  } else {\n    console.error(response.error)\n  }\n  return {\n    props: {\n      body: body,\n      admin_id: params.admin_id\n    }\n  }\n}\n\nexport async function getStaticPaths() {\n  const adminPaths = [\n    \"region\",\n    \"alcohol_title\",\n    \"beer_category\",\n    \"beer_color\",\n    \"bitterness\",\n    \"beer_type\",\n  ]\n  const paths = adminPaths.map(path =>{\n    return {\n      params: {\n        admin_id: path\n      }\n    }\n  })\n  return {\n    paths,\n    fallback: false\n  }\n}\n\nexport default function Post(props) {\n  const root = \"/admin\"\n\n  let updatedBody = null\n  async function loadData(){\n    let response = await fetch(`${process.env.NEXT_PUBLIC_API_ROOT_URL}api/${props.admin_id}`)\n    if(response.ok){\n      updatedBody = await response.json()\n    } else {\n      console.error(response.error)\n    }\n  }\n\n  return (\n    <Layout admin>\n      <Head>\n        <title>{props.admin_id}</title>\n      </Head>\n      <div className={admin.admin_menu}>\n        <Link href={`${root}/region`}>Régions</Link>\n        <Link href={`${root}/alcohol_title`}>Alcohol titles</Link>\n        <Link href={`${root}/beer_category`}>Beer categories</Link>\n        <Link href={`${root}/beer_color`}>Beer colors</Link>\n        <Link href={`${root}/bitterness`}>Bitterness</Link>\n        <Link href={`${root}/beer_type`}>Beer types</Link>\n      </div>\n\n      <div className={admin.admin_body}>\n        <DocumentCreation loadData={loadData} admin_id={props.admin_id} />\n        <DocumentDisplay loadData={loadData} admin_id={props.admin_id} data={updatedBody ? updatedBody : props.body} />\n      </div>\n    </Layout>\n  )\n}"]},"metadata":{},"sourceType":"module"}