{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/Users/doria/Documents/Avem Cre\\u0301ation/Codes/cicerone_app/cicerone_front/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/doria/Documents/Avem Cre\\u0301ation/Codes/cicerone_app/cicerone_front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/doria/Documents/Avem Cre\\u0301ation/Codes/cicerone_app/cicerone_front/src/components/selectField.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Component } from 'react';\nimport { Field } from 'react-final-form';\nimport Select from 'react-select';\nimport myFetch from \"../actions/myFetch\";\n\nclass SelectField extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"loadData\", () => {\n      myFetch(`${process.env.NEXT_PUBLIC_API_ROOT_URL}api/${this.props.url}`, undefined, \"GET\", body => this.setState({\n        options: body\n      }));\n    });\n\n    this.state = {\n      options: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  render() {\n    const options = this.state.options;\n\n    const ReactSelectAdapter = (_ref) => {\n      let {\n        input\n      } = _ref,\n          rest = _objectWithoutProperties(_ref, [\"input\"]);\n\n      return /*#__PURE__*/_jsxDEV(Select, _objectSpread(_objectSpread(_objectSpread({}, input), rest), {}, {\n        instanceId: this.props.name,\n        getOptionLabel: option => option.name,\n        getOptionValue: option => option._id || option,\n        placeholder: this.props.placeholder,\n        className: this.props.className\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(Field, {\n      name: this.props.name,\n      component: ReactSelectAdapter,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SelectField;","map":{"version":3,"sources":["/Users/doria/Documents/Avem Création/Codes/cicerone_app/cicerone_front/src/components/selectField.js"],"names":["Component","Field","Select","myFetch","SelectField","constructor","props","process","env","NEXT_PUBLIC_API_ROOT_URL","url","undefined","body","setState","options","state","componentDidMount","loadData","render","ReactSelectAdapter","input","rest","name","option","_id","placeholder","className"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAClCK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,sCAOP,MAAM;AACfH,MAAAA,OAAO,CACJ,GAAEI,OAAO,CAACC,GAAR,CAAYC,wBAAyB,OAAM,KAAKH,KAAL,CAAWI,GAAI,EADxD,EAELC,SAFK,EAGL,KAHK,EAIJC,IAAD,IAAU,KAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAEF;AAAV,OAAd,CAJL,CAAP;AAMD,KAdiB;;AAEhB,SAAKG,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAWDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL;AACD;;AAGDC,EAAAA,MAAM,GAAE;AACN,UAAMJ,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAA3B;;AAEA,UAAMK,kBAAkB,GAAG,UAAwB;AAAA,UAAvB;AAAEC,QAAAA;AAAF,OAAuB;AAAA,UAAXC,IAAW;;AACjD,0BACE,QAAC,MAAD,gDACMD,KADN,GAEMC,IAFN;AAGE,QAAA,UAAU,EAAE,KAAKf,KAAL,CAAWgB,IAHzB;AAIE,QAAA,cAAc,EAAEC,MAAM,IAAIA,MAAM,CAACD,IAJnC;AAKE,QAAA,cAAc,EAAEC,MAAM,IAAIA,MAAM,CAACC,GAAP,IAAcD,MAL1C;AAME,QAAA,WAAW,EAAE,KAAKjB,KAAL,CAAWmB,WAN1B;AAOE,QAAA,SAAS,EAAE,KAAKnB,KAAL,CAAWoB;AAPxB;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAZD;;AAcA,wBACE,QAAC,KAAD;AACE,MAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWgB,IADnB;AAEE,MAAA,SAAS,EAAEH,kBAFb;AAGE,MAAA,OAAO,EAAEL;AAHX;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA9CiC;;AAiDpC,eAAeV,WAAf","sourcesContent":["import { Component } from 'react'\nimport { Field } from 'react-final-form';\nimport Select from 'react-select'\n\nimport myFetch from \"../actions/myFetch\";\n\nclass SelectField extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      options: []\n    }\n  }\n\n  loadData = () => {\n    myFetch(\n      `${process.env.NEXT_PUBLIC_API_ROOT_URL}api/${this.props.url}`,\n      undefined,\n      \"GET\",\n      (body) => this.setState({options: body})\n    )\n  } \n\n  componentDidMount() {\n    this.loadData()\n  }\n  \n\n  render(){\n    const options = this.state.options\n\n    const ReactSelectAdapter = ({ input, ...rest }) => {\n      return(\n        <Select \n          {...input} \n          {...rest}\n          instanceId={this.props.name}\n          getOptionLabel={option => option.name}\n          getOptionValue={option => option._id || option}\n          placeholder={this.props.placeholder}\n          className={this.props.className}\n        />\n      )\n    }\n\n    return (\n      <Field\n        name={this.props.name}\n        component={ReactSelectAdapter}\n        options={options}\n      />\n    )\n  }\n}\n\nexport default SelectField"]},"metadata":{},"sourceType":"module"}